name: Git Repository Monitor

on:
  schedule:
    # 默认每小时执行一次，可通过 CRON_SCHEDULE secret 自定义
    - cron: '0 * * * *'
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 允许推送状态文件更新

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install requests
        
    - name: Run monitor script
      env:
        MONITORED_REPOS: ${{ secrets.MONITORED_REPOS }}
        MONITORED_REPO: ${{ secrets.MONITORED_REPO }}
        CRON_SCHEDULE: ${{ secrets.CRON_SCHEDULE }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        WXPUSHER_APP_TOKEN: ${{ secrets.WXPUSHER_APP_TOKEN }}
        WXPUSHER_UID: ${{ secrets.WXPUSHER_UID }}
        PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
        # GITHUB_TOKEN 自动提供，或使用自定义 PAT
        GITHUB_TOKEN: ${{ secrets.GH_PAT || github.token }}
      run: |
        python scripts/monitor.py
        
    - name: Commit and push state file if changed
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A
        if ! git diff --staged --quiet; then
          git commit -m "Update monitor state [skip ci]"
          git push
        fi
